<?xml version="1.0" encoding="UTF-8"?>
<!--
    If not stated otherwise in this file or this component's Licenses.txt file the
    following copyright and licenses apply:
   
    Copyright 2018 RDK Management
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
    http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.comcast.coast.xconf.oss</groupId>
        <artifactId>xconf</artifactId>
        <version>1.3.23</version>
    </parent>

    <name>xconf-angular-admin</name>
    <artifactId>xconf-angular-admin</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.comcast.coast.xconf.oss</groupId>
            <artifactId>xconf-dataservice</artifactId>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>            
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <version>${cassandra-unit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-handler</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>           
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>       
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>          
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jexcelapi</groupId>
            <artifactId>jxl</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>                       
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.erosb</groupId>
            <artifactId>everit-json-schema-jdk6</artifactId>
            <version>1.9.2</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180130</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>xconfAdminService2</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-mvn-vars</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <tasks>
                                <echo file="${project.build.outputDirectory}/dataservice.version.properties" append="true">
                                    ProjectName=${project.name}
                                    ProjectVersion=${project.version}
                                    git.build.time=${git.build.time}
                                    ${line.separator}
                                </echo>
                                <exec dir="${basedir}" executable="bash" osfamily="unix" output="${project.build.outputDirectory}/dataservice.version.properties" failonerror="false" append="true">
                                    <arg line="-c &quot;git log -1 | sed -e 's/^commit /git.commit.id=/' -e 's/Date: */git.commit.time=/' |grep ^git &quot;" />
                                </exec>
                                <exec dir="${basedir}" executable="bash" osfamily="unix" output="${project.build.outputDirectory}/dataservice.version.properties" failonerror="false" append="true">
                                    <arg line="-c &quot;git branch | grep '^*' | sed -e 's/^\* /git.branch=/' &quot;" />
                                </exec>
                                <exec dir="${basedir}" executable="cmd" osfamily="windows" output="${project.build.outputDirectory}/dataservice.version.properties" failonerror="false" append="true">
                                    <arg line="-c &quot;git log -1 | sed -e 's/^commit /git.commit.id=/' -e 's/Date: */git.commit.time=/' |grep ^git &quot;" />
                                </exec>
                                <exec dir="${basedir}" executable="cmd" osfamily="windows" output="${project.build.outputDirectory}/dataservice.version.properties" failonerror="false" append="true">
                                    <arg line="-c &quot;git branch | grep '^*' | sed -e 's/^\* /git.branch=/' &quot;" />
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Runs unit tests on build. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <forkMode>always</forkMode>
                    <testFailureIgnore>false</testFailureIgnore>
                    <includes>
                        <include>**/CompleteTestSuite.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>              
                <configuration>
                    <source>${source}</source>
                    <target>${source}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <webApp>
                        <contextPath>/admin/</contextPath>
                    </webApp>
                    <!--
                    Note:
                    Remove this segment and add -Djetty.port=[port number] to the command line
                     to specify a custom port OR change the value specified here.
                    -->
                    <httpConnector>
                        <port>19093</port>
                    </httpConnector>
                    <contextXml>jetty-context.xml</contextXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cassandra-maven-plugin</artifactId>
                <version>${cassandra-maven-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.10.0</version>
                <configuration>
                    <workingDirectory>src/main/webapp</workingDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>Install Node and NPM local to project</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v15.13.0</nodeVersion>
                            <npmVersion>7.8.0</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Install Bower cli and Grunt-CLI packages</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install bower cli grunt-cli</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Compile via NPM install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Compile via Bower</id>
                        <goals>
                            <goal>bower</goal>
                        </goals>
                        <configuration>
                            <arguments>install --allow-root</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Compile via Grunt</id>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <configuration>
                            <!-- use 'dev' to avoid minification 'prod' for minification -->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>              
                <configuration>
                    <warSourceExcludes>node_modules/,
                        bower_components/,
                        *,
                        app/config/*.js,
                        app/core/*.js,
                        app/dclist/*.js,
                        app/directives/*.js,
                        app/file-select/*.js,
                        app/filters/*.js,
                        app/fonts/*.js,
                        app/statistics/*.js,
                        app/services/*.js,
                        app/styles/*,
                        app/*.js
                    </warSourceExcludes>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>
